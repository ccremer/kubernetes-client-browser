name: Release

on:
  push:
    branches:
      - main
      - versioning

jobs:
  release:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Setup npm publish
        run:
          echo "//registry.npmjs.org/:_authToken=${{ secrets. NPM_TOKEN }}" >> ./.npmrc

      - name: Build
        env:
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm install
          npm run build

      - name: Determine Semver
        env:
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        run: |
          echo "PREVIOUS_VERSION=$(yq e '.version' -o yaml lerna.json)" >> $GITHUB_ENV
          echo "SEMVER_TYPE=$(npx auto version)" >> $GITHUB_ENV

      - name: Publish Packages
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          SEMVER_TYPE: prepatch # just to avoid publishing real 2.0.0
        run: |
          npx lerna version ${{ env.SEMVER_TYPE }} --force-publish --ignore-changes --preid rc --yes --message "Bump versions [skip ci]"
          npx lerna publish from-git --yes
          echo "NEXT_VERSION=$(yq e '.version' -o yaml lerna.json)" >> $GITHUB_ENV

      - name: Build changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v3
        with:
          configuration: ".github/changelog-configuration.json"
          outputFile: .github/release-notes.md
          # PreReleases still get a changelog, but the next full release gets a diff since the last full release,
          #  combining possible changelogs of all previous PreReleases in between.
          # PreReleases show a partial changelog since last PreRelease.
          ignorePreReleases: "${{ !contains(env.NEXT_VERSION, '-rc') }}"
          fromTag: ${{ env.PREVIOUS_VERSION }}
          toTag: ${{ env.NEXT_VERSION }}
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        run: |
          gh release create ${{ env.NEXT_VERSION }} --notes-file .github/release-notes.md --prerelease=${{ contains(env.NEXT_VERSION, '-rc') }}
